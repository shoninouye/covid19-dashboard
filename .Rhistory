group_by(date) %>%
summarize(sum_cases = sum(confirmed_cases, na.rm = TRUE),
sum_deaths = sum(confirmed_deaths, na.rm = TRUE),
sum_recovered = sum(confirmed_recovered, na.rm = TRUE))
plotly_covid19_sum <- covid19_sum
# Total cases/deaths/recovered over time
covid19_sum <- covid19_global_full %>%
group_by(date) %>%
summarize(sum_cases = sum(confirmed_cases, na.rm = TRUE),
sum_deaths = sum(confirmed_deaths, na.rm = TRUE),
sum_recovered = sum(confirmed_recovered, na.rm = TRUE))
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
text = sprintf("Total Cases: %s",
sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
ggplotly(plotly_covid_sum, tooltip = "text")
plotly_covid19_sum
ggplot(aes(x = date,
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases))+#,
# text = sprintf("Total Cases: %s",
#            sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
plotly_covid19_sum
plotly_covid19_sum
plotly_covid19_sum
covid19_sum
# Total cases/deaths/recovered over time
covid19_sum <- covid19_global_full %>%
group_by(date) %>%
summarize(sum_cases = sum(confirmed_cases, na.rm = TRUE),
sum_deaths = sum(confirmed_deaths, na.rm = TRUE),
sum_recovered = sum(confirmed_recovered, na.rm = TRUE))
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases))+#,
# text = sprintf("Total Cases: %s",
#            sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
plotly_covid19_sum
ggplotly(plotly_covid_sum, tooltip = "text")
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases))+#,
# text = sprintf("Total Cases: %s",
#            sum_cases))) +
geom_point() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
ggplotly(plotly_covid_sum, tooltip = "text")
plotly_covid19_sum <- covid19_sum %>%
ungroup()
plotly_covid19_sum <- covid19_sum %>%
ungroup() %>%
ggplot(aes(x = date,
y = sum_cases))+#,
# text = sprintf("Total Cases: %s",
#            sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
ggplotly(plotly_covid_sum, tooltip = "text")
covid19_global_full %>%
group_by(date) %>%
summarize(sum_cases = sum(confirmed_cases, na.rm = TRUE),
sum_deaths = sum(confirmed_deaths, na.rm = TRUE),
sum_recovered = sum(confirmed_recovered, na.rm = TRUE))
# Total cases/deaths/recovered over time
covid19_sum <- covid19_global_full %>%
group_by(date) %>%
summarize(sum_cases = sum(confirmed_cases, na.rm = TRUE),
sum_deaths = sum(confirmed_deaths, na.rm = TRUE),
sum_recovered = sum(confirmed_recovered, na.rm = TRUE)) %>% ungroup()
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases))+#,
# text = sprintf("Total Cases: %s",
#            sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
ggplotly(plotly_covid_sum, tooltip = "text")
plotly_covid19_sum
covid19_global_full
ggplotly(plotly_covid_sum)
covid19_global_full %>%
filter(country_region == "United States")
covid19_global_full %>%
filter(country_region == "US")
covid19_global_full %>%
filter(country_region == "US") %>%
ggplot(aes(x = date, y = confirmed_cases))
x <- covid19_global_full %>%
filter(country_region == "US") %>%
ggplot(aes(x = date, y = confirmed_cases)) +
geom_line()
ggplotly(x)
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
# x <- covid19_global_full %>%
#   filter(country_region == "US") %>%
#   ggplot(aes(x = date, y = confirmed_cases)) +
#   geom_line()
# ggplotly(x)
ggplotly(plotly_covid_sum, tooltip = "text")
plotly_covid19_sum
# Total cases/deaths/recovered over time
covid19_sum <- covid19_global_full %>%
group_by(date) %>%
summarize(sum_cases = sum(confirmed_cases, na.rm = TRUE),
sum_deaths = sum(confirmed_deaths, na.rm = TRUE),
sum_recovered = sum(confirmed_recovered, na.rm = TRUE))
View(covid19_sum)
plotly_covid19_sum
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
# x <- covid19_global_full %>%
#   filter(country_region == "US") %>%
#   ggplot(aes(x = date, y = confirmed_cases)) +
#   geom_line()
# ggplotly(x)
ggplotly(plotly_covid_sum, tooltip = "text")
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
# Total cases/deaths/recovered over time
covid19_sum <- covid19_global_full %>%
group_by(date) %>%
summarize(sum_cases = sum(confirmed_cases, na.rm = TRUE),
sum_deaths = sum(confirmed_deaths, na.rm = TRUE),
sum_recovered = sum(confirmed_recovered, na.rm = TRUE)) %>% ungroup()
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
plotly_covid19_sum
?geom_line
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
group = 1,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
plotly_covid19_sum
# x <- covid19_global_full %>%
#   filter(country_region == "US") %>%
#   ggplot(aes(x = date, y = confirmed_cases)) +
#   geom_line()
# ggplotly(x)
ggplotly(plotly_covid_sum, tooltip = "text")
# x <- covid19_global_full %>%
#   filter(country_region == "US") %>%
#   ggplot(aes(x = date, y = confirmed_cases)) +
#   geom_line()
# ggplotly(x)
ggplotly(plotly_covid19_sum, tooltip = "text")
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
# group = 1,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
# x <- covid19_global_full %>%
#   filter(country_region == "US") %>%
#   ggplot(aes(x = date, y = confirmed_cases)) +
#   geom_line()
# ggplotly(x)
ggplotly(plotly_covid19_sum, tooltip = "text")
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
group = 1,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_minimal() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
# x <- covid19_global_full %>%
#   filter(country_region == "US") %>%
#   ggplot(aes(x = date, y = confirmed_cases)) +
#   geom_line()
# ggplotly(x)
ggplotly(plotly_covid19_sum, tooltip = "text")
View(covid19_global_full)
# Number of total worldwide confirmed cases/deaths/recovered
covid19_global_full %>%
filter(min(date))
covid19_global_full %>%
filter(date = min(date))
# Number of total worldwide confirmed cases/deaths/recovered
covid19_global_full %>%
filter(date == min(date))
covid19_global_full %>%
filter(date == max(date))
# Number of total worldwide confirmed cases/deaths/recovered
covid19_global_full %>%
filter(date == max(date)) %>%
summarize(total_cases = sum(confirmed_cases),
total_deaths = sum(confirmed_deaths),
total_recovered = sum(confirmed_recovered))
# Number of total worldwide confirmed cases/deaths/recovered
covid19_global_full %>%
filter(date == max(date)) %>%
summarize(total_cases = sum(confirmed_cases, na.rm = TRUE),
total_deaths = sum(confirmed_deaths),
total_recovered = sum(confirmed_recovered))
# Number of total worldwide confirmed cases/deaths/recovered
covid19_global_full %>%
filter(date == max(date)) %>%
summarize(total_cases = sum(confirmed_cases, na.rm = TRUE),
total_deaths = sum(confirmed_deaths, na.rm = TRUE),
total_recovered = sum(confirmed_recovered, na.rm = TRUE))
# List of confirmed cases/deaths/recovered by country
covid19_global_full %>%
group_by(country_region) %>%
filter(date == max(date)) %>%
summarize(total_cases = sum(confirmed_cases, na.rm = TRUE),
total_deaths = sum(confirmed_deaths, na.rm = TRUE),
total_recovered = sum(confirmed_recovered, na.rm = TRUE))
covid19_global_full %>%
filter(date == max(date))
# List of confirmed cases/deaths/recovered by country
covid19_global_full %>%
group_by(country_region) %>%
filter(date == max(date))
# List of confirmed cases/deaths/recovered by country
covid19_global_full %>%
filter(date == max(date))
plotly_covid19_sum
plotly_covid19_sum <- covid19_sum %>%
ggplot(aes(x = date,
y = sum_cases,
group = 1,
text = sprintf("Total Cases: %s", sum_cases))) +
geom_line() +
scale_y_continuous(labels = scales::comma) +
theme_light() +
labs(title = "Total Number of COVID-19 ____ Worldwide",
x = "",
y = "Number of ____")
plotly_covid19_sum
ggplotly(plotly_covid19_sum, tooltip = "text")
library(ggmap)
install.packages("ggmap")
library(ggmap)
?ggmap
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
install.packages("geojsonio")
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
install.packages(rgdal)
install.packages("rgdal")
# Map: Cases/deaths/recovered by country
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="DATA/world_shape_file.zip")
# Map: Cases/deaths/recovered by country
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="downloads/world_shape_file.zip")
# Map: Cases/deaths/recovered by country
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="user/admin/downloads/world_shape_file.zip")
get_wd()
getwd()
# Map: Cases/deaths/recovered by country
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="Users/downloads/world_shape_file.zip")
library(leaflet)
install.packages("leaflet")
library(leaflet)
?leaflet
# Map: Cases/deaths/recovered by country
leaflet() %>%
addTiles()
providers
# Map: Cases/deaths/recovered by country
leaflet() %>%
addProviderTiles(provider = "CartoDB")
system("unzip Users/admin/downloads/world_shape_file.zip")
system("unzip Users/admin/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip")
getwd()
setwd(/Users/admin/shon/projects/covid19-dashboard)
setwd("/Users/admin/shon/projects/covid19-dashboard")
library(rgdal)
world_spdf <- readOGR(
dsn= paste0(getwd(),"/TM_WORLD_BORDERS_SIMPL-0.3") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
WorldCountry
library(geojsonio)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
library(maps)
install.packages("maps")
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
mapStates
str(mapStates)
View(mapStates)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
topo.colors(10, alpha = NULL)
leaflet(data = mapStates) %>%
addProviderTiles(provider = "CartoDB") %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
leaflet(data = mapStates) %>%
addProviderTiles(provider = "CartoDB")
map("country", fill = TRUE, plot = FALSE)
?map
covid19_global_full
# List of confirmed cases/deaths/recovered by country
covid19_global_full %>%
filter(date == max(date))
# List of confirmed cases/deaths/recovered by country
covid19_global_current <- covid19_global_full %>%
filter(date == max(date))
install.packages("tigris")
library(tigris)
countries
geo_join
?geo_join
ne_countries()
install.packages("rnaturalearth")
library(rnaturalearth)
install.packages("WDI")
library(WDI)
dat <- WDI(country = "all", indicator = "SP.DYN.LE00.IN", start = 2012, end = 2012)
dat$SP.DYN.LE00.IN <- round(dat$SP.DYN.LE00.IN, 1)
View(dat)
countries <- ne_countries()
?ne_countries
countries2 <- geo_join(countries, dat, 'iso_a2', 'iso2c')
countries
View(countries)
View(countries2)
head(covid19_global_current)
covid19_global_geo <- geo_join(countries, covid19_global_current, "name", "country_region")
covid19_global_geo@data %>% View()
covid19_global_geo <- geo_join(countries, covid19_global_current, "name_long", "country_region")
covid19_global_geo@data %>% select(name_long, country_region) %>% View()
View(covid19_global_current)
# List of confirmed cases/deaths/recovered by country
covid19_global_current <- covid19_global_full %>%
filter(date == max(date)) %>%
group_by(country_region) %>%
summarize(current_cases = sum(confirmed_cases, na.rm = TRUE),
current_deaths = sum(confirmed_deaths, na.rm = TRUE),
current_recovered = sum(confirmed_recovered, na.rm = TRUE))
covid19_global_geo <- geo_join(countries, covid19_global_current, "name", "country_region")
covid19_global_geo@data %>% select(name_long, country_region) %>% View()
covid19_global_geo <- geo_join(countries, covid19_global_current, "name_long", "country_region")
covid19_global_geo@data %>% select(name_long, country_region) %>% View()
covid19_global_full %>% filter(country_region == "Korea")
covid19_global_current %>% count(country_region)
covid19_global_current %>% count(country_region, sort = TRUE)
covid19_global_current %>% count(country_region) %>% summarize(n = n())
covid19_global_geo <- geo_join(countries, covid19_global_current, "name_long", "country_region", how = "outer")
?join
covid19_global_geo@data %>%
select(name_long) %>%
full_join(covid19_global_current, by = c("name_long" = "country_region"))
covid19_global_geo@data %>%
select(name_long) %>%
full_join(covid19_global_current, by = c("name_long" = "country_region")) %>%
View()
covid19_global_geo@data %>%
select(name_long) %>%
full_join(covid19_global_current, by = c("name_long" = "country_region"), keep = TRUE) %>%
View()
covid19_global_geo@data %>%
select(name_long) %>%
full_join(covid19_global_current, by = c("name_long" = "country_region"), copy = TRUE) %>%
View()
covid19_global_geo@data %>%
select(name_long) %>%
left_join(covid19_global_current, by = c("name_long" = "country_region"), keep = TRUE) %>%
View()
covid19_global_geo@data %>%
select(name_long) %>%
left_join(covid19_global_current, by = c("name_long" = "country_region"), keep = TRUE)
covid19_global_geo@data %>%
select(name_long) %>%
left_join(select(covid19_global_current, country_region), by = c("name_long" = "country_region"), keep = TRUE) %>%
View()
x <- covid19_global_current %>%
mutate(country_region2 = country_region) %>%
select(country_region, country_region2)
covid19_global_geo@data %>%
select(name_long) %>%
left_join(x, by = c("name_long" = "country_region"), keep = TRUE) %>%
View()
covid19_global_geo@data %>%
select(name_long) %>%
full_join(x, by = c("name_long" = "country_region"), keep = TRUE) %>%
View()
covid19_global_geo@data %>% select(name_long, country_region) %>% View()
countries@data %>%
select(name_long) %>%
full_join(x, by = c("name_long" = "country_region"), keep = TRUE) %>%
View()
x
nrow(x)
x %>%
full_join(select(countries@data, name_long), by = c("name_long" = "country_region"), keep = TRUE) %>%
View()
x %>%
full_join(select(countries@data, name_long), by = c("country_region" = "name_long"), keep = TRUE) %>%
View()
full_join(mutate(countries@data, name_long2 = name_long), by = c("country_region" = "name_long"), keep = TRUE) %>%
View()
full_join(mutate(countries@data$name_long, name_long2 = name_long), by = c("country_region" = "name_long"), keep = TRUE) %>%
View()
countries@data$name_long
full_join(mutate(data.frame(name_long = countries@data$name_long), name_long2 = name_long), by = c("country_region" = "name_long"), keep = TRUE) %>%
View()
mutate(data.frame(name_long = countries@data$name_long), name_long2 = name_long)
x %>%
select(country_region) %>%
full_join(mutate(data.frame(name_long = countries@data$name_long), name_long2 = name_long), by = c("country_region" = "name_long"), keep = TRUE) %>%
View()
ne_country_list <- countries@data$name_long
ne_country_list <- data.frame(name_long = countries@data$name_long)
View(ne_country_list)
ne_country_short <- data.frame(name_long = countries@data$name)
View(ne_country_short)
data.frame(name_long = countries@data$name_long) %>%
bind_cols(ne_country_short)
data.frame(name_long = countries@data$name_long) %>%
bind_cols(countries@data$name)
ne_country_list <- data.frame(name_long = countries@data$name_long) %>%
bind_cols(data.frame(name = countries@data$name))
x %>%
select(country_region) %>%
full_join(mutate(data.frame(name_long = countries@data$name_long), name_long2 = name_long), by = c("country_region" = "name_long"), keep = TRUE) %>%
filter(is.na(name_long2))
x %>%
select(country_region) %>%
full_join(mutate(data.frame(name_long = countries@data$name_long), name_long2 = name_long), by = c("country_region" = "name_long"), keep = TRUE) %>%
filter(is.na(name_long2)) %>% View()
